---
# Configuration file for running ChIP-seq workflow

# Here is where the reference genomes are specified
reference:
    # name of the genome
    U00096.3:
        # location of the genbanks. If put in the location and format shown
        # below the pipeline will attempt to pull this file from NCBI by
        # accession number. Each genbank MUST have a associated name which
        # is used to name the contig pulled from it.
        genbanks: 
            U00096.3: resources/genbanks/U00096.3.gbk
        # This is the fasta file for each chromosome in the genome
        # If specified location then it is automatically parsed
        # from the genbank.
        fastas:
            - results/alignment/process_genbank/U00096.3/U00096.3.fna
            # but you can also add additional contigs that you may want in
            # the final alignment genome by listing them here
            - test/ecoli_rrnD.fa
        # This allows you to mask regions by replacing them with Ns. Masked
        # regions need to be specified by a bed file
        masked_regions: test/ecoli_rrns.bed

# Options to control preprocessing rules
preprocessing:
    # control the parameter string passed to cutadapt. Here you could change
    # the adaptor sequences for every sample by using 
    # cut_param_string:
    #   value: "my string here"
    # or by sample by using :
    # cut_param_string: 
    #   column: cutadapt_params
    # and specifying the name of the column in the
    # sample sheet that holds the strings you want to for each sample. In this
    # example it would be the column cutadapt_params that holds a string for
    # each sample
    cutadapt_pe:
        cut_param_string:
            value: "-a AGATCGGAAGAGCACACGTCTGAACTCCAGTCA -A AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"
    # Control the parameter string from trimmomatic
    trimmomatic_pe:
        trim_param_string:
            value: "LEADING:3 TRAILING:3 SLIDINGWINDOW:4:15"

# Options to control alignment rules
alignment:
    process_genbank:
        # Control what features are parsed from the genbank when pulling out
        # bed files
        features:
            value: "CDS tRNA rRNA ncRNA"
        qual_name: 
            value: "gene"
    bowtie2_map:
        # controls how bowtie2 does its alignments
        bowtie2_param_string:
            value: "--end-to-end --very-sensitive --phred33"
        # controls samtools filtering as reads come out of bowtie2. Default
        # is to just convert the sam records into a bam with -b
        samtools_view_param_string:
            value: "-b"


# Options to control genome coverage calculations
coverage_and_norm:

    # what resolution in bp do you want the coverage to be calculated?
    resolution: 5
    # general controls - these only control what is automatically run
    # when running the whole pipeline or module.
    # how to normalize within a sample. Options include:
    # RPKM, CPM, BPM, RPGC, median, and SES. See deeptools manual for
    # details on these normalization methods.
    within: median
    # drop NaNs and Infs from zero coverage in input or extracted
    # Note
    # that bigwigs will not display properly in IGV if they have nans or infs
    dropNaNsandInfs: true
    # Robust Z scale the log2ratio of extracted to input
    RobustZ: true
    # rule specific controls
    # Each of these can be specified either as a single value for every sample
    # or as a column in the sample_sheet using column: column_name
    deeptools_coverage:
        bamCoverage_param_string:
            value: "--samFlagInclude 66 --extendReads --exactScaling --minMappingQuality 10"
    bwtools_median:
        # pseudocount is added before normalizing by the median
        pseudocount:
            value: 0
    bwtools_spike_scale:
        # This controls how the spike-in regions are used to scale the
        # data when scaling to a spike-in.
        # Specify the regions to consider for the spike-in here as a bed.
        # Below is a placeholder you would want to put in your own bed here
        fixed_regions:
            value: "results/alignment/process_genbank/U00096.3/U00096.3.bed"
        # What to do with the values in the spike-in sample? This sums the
        # coverage to use as a scaling factor. You could also use mean or
        # median over the regions considered.
        summary_func:
            value: "sum"
    bwtools_fixed_subtract:
        # what regions to use as the background when doing a background
        # subtraction. This just uses all genes which is non-sensical.
        # You will want to replace with what you need
        fixed_regions: 
            value: "results/alignment/process_genbank/U00096.3/U00096.3.bed"
    bwtools_fixed_scale:
        # what regions to use as the background when doing a scaling by a
        # fixed set of regions. This just uses all genes which is also
        # non-sensical. You will want to replace with what you need.
        fixed_regions: 
            value: "results/alignment/process_genbank/U00096.3/U00096.3.bed"
    bwtools_query_subtract:
        # What regions to consider for a dynamically chosen background subtraction
        query_regions:
            value: "results/alignment/process_genbank/U00096.3/U00096.3.bed"
        # how many regions to look at?
        number_of_regions:
            value: 20
    bwtools_query_scale:
        # What regions to consider for a max scaling
        query_regions:
            value: "results/alignment/process_genbank/U00096.3/U00096.3.bed"
        # How many regions to look at for max scaling
        number_of_regions:
            value: 20

# Options to control quality control
quality_control:
    # what column to group samples by for ChIP-QC output plots?
    group_by: genome

# Options to control peak calling
peak_calling:
    # Can make different models to try out different peak callers or parameters
    cmarrt_all:
        # specify the peak caller to use. Currently only support "cmarrt" and "macs2"
        peak_caller: "cmarrt"
        # filter out the samples you want to run based on metadata
        filter: 'not input_sample.isnull()'
        # Choose which coverage file you want to run the peak caller on
        filesignature: "results/coverage_and_norm/bwtools_compare/%s_BPM_log2ratio.bw"
        # Window size is required for cmarrt
        # Half the size of the window in *entries* thus this would be 25
        # * 5 bp resolution for a half window size of 125 bp
        cmarrt_window_size:
            value: 25
        # Additional parameters to the calling function can be specified here
        # Number of entries to consolidate peaks over i.e. two peaks within
        # 10 * 5bp = 50 bp will get merged into one peak.
        cmarrt_param_string:
            value:  "--consolidate 10 --plots"
    macs2_all:
        peak_caller: "macs2"
        # filter out the samples you want to run based on metadata
        filter: 'not input_sample.isnull()'
        # Macs2 runs directly on the bam files for each sample so
        # a filesignature does not need to specified.

        # specify a parameter string used to control macs2
        # -f BAMPE is automatically specified and -g EFFECTIVE_GENOME_SIZE is
        # automatically determined.
        macs2_param_string: 
            value: "--broad"

# Control for the postprocessing submodule
postprocessing:
    # summarizes values by region
    bwtools_query:
        # Can specify different "models" to run by naming them here
        # Model 1 - look at the full coverage for all genes
        all_genes_cov:
            # which regions to use? Specifying a file like this has the pipeline
            # parse it from your genbank file given the process genbank
            # parameters above in the alignment section
            regions: "results/alignment/process_genbank/U00096.3/U00096.3.bed"
            # which files to use? This file signature will substitute in
            # a sample name for the %s
            filesignature: "results/coverage_and_norm/bwtools_compare/%s_spike_ratio_fixedsub_fixedscale.bw"
            # how many bp upstream (5') of a feature to include
            upstream: 0
            # how many bp downstream (3') of a feature to include
            downstream: 0
            # what resolution to query data (shouldn't be lower than the
            # resolution of your file
            res : 5
            # How do you want to summarize your data? (identity gives every data
            # point in tidy format)
            summarize: "identity"
        # Model 2 - look at the coverage for all genes as a mean summary
        genotypeA_all_genes_mean:
            # only consider the samples that have a genotype A
            filter: '"A" in genotype and not input_sample.isnull()'
            # which regions to use?
            regions: "results/alignment/process_genbank/U00096.3/U00096.3.bed"
            # which files to use?
            filesignature: "results/coverage_and_norm/bwtools_compare/%s_median_ratio_querysub_queryscale.bw"
            # what resolution to query data (shouldn't be lower than the
            # resolution of your file
            res : 5
            # How do you want to summarize your data? (identity gives every data
            # point in tidy format, single allows for a single number summary)
            summarize: "single"
            # What single number summary do you want (mean, median, max, min)
            # only defined when summarize is "single"
            summarize_func: "mean"

